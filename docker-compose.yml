# version: '3.9'

# services:
#   # mongodb:
#   #   image: mongo:6.0
#   #   container_name: nest_mongo
#   #   ports:
#   #     - "27017:27017"
#   #   environment:
#   #     MONGO_INITDB_ROOT_USERNAME: root
#   #     MONGO_INITDB_ROOT_PASSWORD: NKGDSTG76
#   #   volumes:
#   #     - mongo_data:/data/db
#   #   healthcheck:
#   #     test: ["CMD", "mongosh", "--username", "root", "--password", "NKGDSTG76", "--authenticationDatabase", "admin", "--eval", "db.runCommand({ ping: 1 })"]
#   #     interval: 10s
#   #     timeout: 5s
#   #     retries: 5
#   # mongodb:
#   #   image: mongo:6.0
#   #   container_name: nest_mongo
#   #   ports:
#   #     - "27017:27017"
#   #   environment:
#   #     MONGO_INITDB_ROOT_USERNAME: root
#   #     MONGO_INITDB_ROOT_PASSWORD: NKGDSTG76
#   #   volumes:
#   #     - mongo_data:/data/db
#   #   healthcheck:
#   #     test: >
#   #       CMD-SHELL
#   #       mongosh --host localhost --port 27017
#   #       -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD
#   #       --authenticationDatabase admin --quiet
#   #       --eval "db.adminCommand({ ping: 1 }).ok" | grep 1
#   #     interval: 5s
#   #     timeout: 5s
#   #     retries: 30
#   #     start_period: 20s
#   mongodb:
#     image: mongo:6.0
#     container_name: nest_mongo
#     ports:
#       - '27017:27017'
#     environment:
#       MONGO_INITDB_ROOT_USERNAME: root
#       MONGO_INITDB_ROOT_PASSWORD: NKGDSTG76
#     volumes:
#       - mongo_data:/data/db
#   api:
#     container_name: nest_api
#     build:
#       context: .
#       dockerfile: Dockerfile
#       target: dev   # switch to "prod" for a production image
#     command: pnpm run start:dev   # in prod image, the CMD in Dockerfile runs node dist/main.js
#     environment:
#       NODE_ENV: development
#       PORT: 3000
#       MONGODB_URI: mongodb://root:NKGDSTG76@mongodb:27017/nest?authSource=admin
#     ports:
#       - "3000:3000"
#     volumes:
#       - ./:/usr/src/app
#       # Keep container's node_modules to avoid host/OS mismatch with pnpm
#       - /usr/src/app/node_modules
#     depends_on:
#       mongodb:
#         condition: service_healthy

# volumes:
#   mongo_data:



# # services:
# #   mongodb:
# #     image: mongo:6.0
# #     container_name: nest_mongo
# #     ports:
# #       - '27017:27017'
# #     environment:
# #       MONGO_INITDB_ROOT_USERNAME: root
# #       MONGO_INITDB_ROOT_PASSWORD: NKGDSTG76
# #     volumes:
# #       - mongo_data:/data/db

# # volumes:
# #   mongo_data:




version: "3.9"

services:
  mongo:
    image: mongo:7
    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-example}
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 10

  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: nest-api
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      # Use the service name "mongo" as hostname inside the compose network
      MONGO_URI: mongodb://${MONGO_INITDB_ROOT_USERNAME:-root}:${MONGO_INITDB_ROOT_PASSWORD:-example}@localhost:27017/app?authSource=admin
    ports:
      - "3000:3000"
    depends_on:
      mongo:
        condition: service_healthy

volumes:
  mongo_data:
